{"version":3,"file":"ultra-media-element.umd.js","sources":["../../../node_modules/.pnpm/super-media-element@1.4.2/node_modules/super-media-element/super-media-element.js","../src/core/format.ts","../src/core/format-detector.ts","../src/utils/log.ts","../src/utils/unit.ts","../src/utils/network.ts","../src/players/hls-player.ts","../src/players/video-player.ts","../src/players/dash-player.ts","../src/players/audio-player.ts","../src/core/player-factory.ts","../src/ultra-media-element.ts","../src/index.ts"],"sourcesContent":["/**\n * Super Media Element\n * Based on https://github.com/muxinc/custom-video-element - Mux - MIT License\n *\n * The goal is to create an element that works just like the video element\n * but can be extended/sub-classed, because native elements cannot be\n * extended today across browsers. Support for extending async loaded video\n * like API's. e.g. video players.\n */\n\n// The onevent like props are weirdly set on the HTMLElement prototype with other\n// generic events making it impossible to pick these specific to HTMLMediaElement.\nexport const Events = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  'timeupdate',\n  'volumechange',\n  'waiting',\n  'waitingforkey',\n  'resize',\n  'enterpictureinpicture',\n  'leavepictureinpicture',\n  'webkitbeginfullscreen',\n  'webkitendfullscreen',\n  'webkitpresentationmodechanged',\n];\n\nexport const template = globalThis.document?.createElement('template');\n\nif (template) {\n  template.innerHTML = /*html*/`\n    <style>\n      :host {\n        display: inline-block;\n        line-height: 0;\n      }\n\n      video,\n      audio {\n        max-width: 100%;\n        max-height: 100%;\n        min-width: 100%;\n        min-height: 100%;\n      }\n    </style>\n    <slot></slot>\n  `;\n}\n\n/**\n * @see https://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\n */\nexport const SuperMediaMixin = (superclass, { tag, is }) => {\n\n  const nativeElTest = globalThis.document?.createElement(tag, { is });\n  const nativeElProps = nativeElTest ? getNativeElProps(nativeElTest) : [];\n\n  return class SuperMedia extends superclass {\n    static Events = Events;\n    static template = template;\n    static skipAttributes = [];\n    static #isDefined;\n\n    static get observedAttributes() {\n      SuperMedia.#define();\n\n      // Include any attributes from the custom built-in.\n      const natAttrs = nativeElTest?.constructor?.observedAttributes ?? [];\n\n      return [\n        ...natAttrs,\n        'autopictureinpicture',\n        'disablepictureinpicture',\n        'disableremoteplayback',\n        'autoplay',\n        'controls',\n        'controlslist',\n        'crossorigin',\n        'loop',\n        'muted',\n        'playsinline',\n        'poster',\n        'preload',\n        'src',\n      ];\n    }\n\n    static #define() {\n      if (this.#isDefined) return;\n      this.#isDefined = true;\n\n      const propsToAttrs = new Set(this.observedAttributes);\n      // defaultMuted maps to the muted attribute, handled manually below.\n      propsToAttrs.delete('muted');\n\n      // Passthrough native el functions from the custom el to the native el\n      for (let prop of nativeElProps) {\n        if (prop in this.prototype) continue;\n\n        const type = typeof nativeElTest[prop];\n        if (type == 'function') {\n          // Function\n          this.prototype[prop] = function (...args) {\n            this.#init();\n\n            const fn = () => {\n              if (this.call) return this.call(prop, ...args);\n              return this.nativeEl[prop].apply(this.nativeEl, args);\n            };\n\n            if (this.loadComplete && !this.isLoaded) {\n              return this.loadComplete.then(fn);\n            }\n            return fn();\n          };\n        } else {\n          // Some properties like src, preload, defaultMuted are handled manually.\n\n          // Getter\n          let config = {\n            get() {\n              this.#init();\n\n              let attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                const val = this.getAttribute(attr);\n                return val === null ? false : val === '' ? true : val;\n              }\n\n              return this.get?.(prop) ?? this.nativeEl?.[prop] ?? this.#standinEl[prop];\n            },\n          };\n\n          if (prop !== prop.toUpperCase()) {\n            // Setter (not a CONSTANT)\n            config.set = async function (val) {\n              this.#init();\n\n              let attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                if (val === true || val === false || val == null) {\n                  this.toggleAttribute(attr, Boolean(val));\n                } else {\n                  this.setAttribute(attr, val);\n                }\n                return;\n              }\n\n              if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n              if (this.set) {\n                this.set(prop, val);\n                return;\n              }\n\n              this.nativeEl[prop] = val;\n            };\n          }\n\n          Object.defineProperty(this.prototype, prop, config);\n        }\n      }\n    }\n\n    #isInit;\n    #loadComplete;\n    #hasLoaded = false;\n    #isLoaded = false;\n    #nativeEl;\n    #standinEl;\n\n    constructor() {\n      super();\n\n      if (!this.shadowRoot) {\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.append(this.constructor.template.content.cloneNode(true));\n      }\n\n      // If a load method is provided in the child class create a load promise.\n      if (this.load !== SuperMedia.prototype.load) {\n        this.loadComplete = new PublicPromise();\n      }\n\n      // If the custom element is defined before the custom element's HTML is parsed\n      // no attributes will be available in the constructor (construction process).\n      // Wait until initializing in the attributeChangedCallback or\n      // connectedCallback or accessing any properties.\n    }\n\n    get loadComplete() {\n      return this.#loadComplete;\n    }\n\n    set loadComplete(promise) {\n      this.#isLoaded = false;\n      this.#loadComplete = promise;\n      promise?.then(() => {\n        this.#isLoaded = true;\n      });\n    }\n\n    get isLoaded() {\n      return this.#isLoaded;\n    }\n\n    get nativeEl() {\n      return this.#nativeEl\n        ?? this.shadowRoot.querySelector(tag)\n        ?? this.querySelector(tag);\n    }\n\n    set nativeEl(val) {\n      this.#nativeEl = val;\n    }\n\n    get defaultMuted() {\n      return this.hasAttribute('muted');\n    }\n\n    set defaultMuted(val) {\n      this.toggleAttribute('muted', Boolean(val));\n    }\n\n    get src() {\n      return this.getAttribute('src');\n    }\n\n    set src(val) {\n      this.setAttribute('src', `${val}`);\n    }\n\n    get preload() {\n      return this.getAttribute('preload') ?? this.nativeEl?.preload;\n    }\n\n    set preload(val) {\n      this.setAttribute('preload', `${val}`);\n    }\n\n    async #init() {\n      if (this.#isInit) return;\n      this.#isInit = true;\n\n      this.#initStandinEl();\n      this.#initNativeEl();\n\n      for (let prop of nativeElProps)\n        this.#upgradeProperty(prop);\n\n      // Keep some native child elements like track and source in sync.\n      const childMap = new Map();\n      // An unnamed <slot> will be filled with all of the custom element's\n      // top-level child nodes that do not have the slot attribute.\n      const slotEl = this.shadowRoot.querySelector('slot:not([name])');\n      slotEl?.addEventListener('slotchange', () => {\n        const removeNativeChildren = new Map(childMap);\n        slotEl\n          .assignedElements()\n          .filter((el) => ['track', 'source'].includes(el.localName))\n          .forEach(async (el) => {\n            // If the source or track is still in the assigned elements keep it.\n            removeNativeChildren.delete(el);\n            // Re-use clones if possible.\n            let clone = childMap.get(el);\n            if (!clone) {\n              clone = el.cloneNode();\n              childMap.set(el, clone);\n            }\n            if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n            this.nativeEl.append?.(clone);\n          });\n        removeNativeChildren.forEach((el) => el.remove());\n      });\n\n      // The video events are dispatched on the SuperMediaElement instance.\n      // This makes it possible to add event listeners before the element is upgraded.\n      for (let type of this.constructor.Events) {\n        this.shadowRoot.addEventListener?.(type, (evt) => {\n          if (evt.target !== this.nativeEl) return;\n          this.dispatchEvent(new CustomEvent(evt.type, { detail: evt.detail }));\n        }, true);\n      }\n    }\n\n    #upgradeProperty(prop) {\n      // Sets properties that are set before the custom element is upgraded.\n      // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        // Delete the set property from this instance.\n        delete this[prop];\n        // Set the value again via the (prototype) setter on this class.\n        this[prop] = value;\n      }\n    }\n\n    #initStandinEl() {\n      // Neither Chrome or Firefox support setting the muted attribute\n      // after using document.createElement.\n      // Get around this by setting the muted property manually.\n      const dummyEl = document.createElement(tag, { is });\n      dummyEl.muted = this.hasAttribute('muted');\n\n      for (let { name, value } of this.attributes) {\n        dummyEl.setAttribute(name, value);\n      }\n\n      this.#standinEl = {};\n      for (let name of getNativeElProps(dummyEl)) {\n        this.#standinEl[name] = dummyEl[name];\n      }\n\n      // unload dummy video element\n      dummyEl.removeAttribute('src');\n      dummyEl.load();\n    }\n\n    async #initNativeEl() {\n      if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n      // If there is no nativeEl by now, create it our bloody selves.\n      if (!this.nativeEl) {\n        const nativeEl = document.createElement(tag, { is });\n        nativeEl.part = tag;\n        this.shadowRoot.append(nativeEl);\n      }\n\n      // Neither Chrome or Firefox support setting the muted attribute\n      // after using document.createElement.\n      // Get around this by setting the muted property manually.\n      this.nativeEl.muted = this.hasAttribute('muted');\n    }\n\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      // Initialize right after construction when the attributes become available.\n      this.#init();\n\n      // Only call loadSrc when the super class has a load method.\n      if (attrName === 'src' && this.load !== SuperMedia.prototype.load) {\n        this.#loadSrc();\n      }\n\n      this.#forwardAttribute(attrName, oldValue, newValue);\n    }\n\n    async #loadSrc() {\n      // The first time we use the Promise created in the constructor.\n      if (this.#hasLoaded) this.loadComplete = new PublicPromise();\n      this.#hasLoaded = true;\n\n      // Wait 1 tick to allow other attributes to be set.\n      await Promise.resolve();\n      await this.load();\n\n      this.loadComplete?.resolve();\n      await this.loadComplete;\n    }\n\n    async #forwardAttribute(attrName, oldValue, newValue) {\n      if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n      // Ignore a few that don't need to be passed & skipped attributes.\n      // e.g. src: native element is using MSE and has a blob url as src attribute.\n      if (['id', 'class', ...this.constructor.skipAttributes].includes(attrName)) {\n        return;\n      }\n\n      if (newValue === null) {\n        this.nativeEl.removeAttribute?.(attrName);\n      } else {\n        this.nativeEl.setAttribute?.(attrName, newValue);\n      }\n    }\n\n    connectedCallback() {\n      this.#init();\n    }\n  };\n};\n\nfunction getNativeElProps(nativeElTest) {\n  // Map all native element properties to the custom element\n  // so that they're applied to the native element.\n  // Skipping HTMLElement because of things like \"attachShadow\"\n  // causing issues. Most of those props still need to apply to\n  // the custom element.\n  let nativeElProps = [];\n\n  // Walk the prototype chain up to HTMLElement.\n  // This will grab all super class props in between.\n  // i.e. VideoElement and MediaElement\n  for (\n    let proto = Object.getPrototypeOf(nativeElTest);\n    proto && proto !== HTMLElement.prototype;\n    proto = Object.getPrototypeOf(proto)\n  ) {\n    nativeElProps.push(...Object.getOwnPropertyNames(proto));\n  }\n\n  return nativeElProps;\n}\n\n/**\n * A utility to create Promises with convenient public resolve and reject methods.\n * @return {Promise}\n */\nclass PublicPromise extends Promise {\n  constructor(executor = () => {}) {\n    let res, rej;\n    super((resolve, reject) => {\n      executor(resolve, reject);\n      res = resolve;\n      rej = reject;\n    });\n    this.resolve = res;\n    this.reject = rej;\n  }\n}\n\nexport const SuperVideoElement = globalThis.document ? SuperMediaMixin(HTMLElement, { tag: 'video' }) : class {};\n\nexport const SuperAudioElement = globalThis.document ? SuperMediaMixin(HTMLElement, { tag: 'audio' }) : class {};\n","export enum Format {\n  HLS = \"hls\",\n  MP4 = \"mp4\",\n  DASH = \"dash\",\n  AUDIO = \"audio\",\n}","import { Format } from \"./format\";\n\nexport function detectFormat(src: string): Format | undefined {\n  const lower = src.toLowerCase();\n\n  if (lower.includes(\".m3u8\")) return Format.HLS;\n  if (lower.includes(\".mpd\")) return Format.DASH;\n  if (/\\.(mp4|webm|ogg)/.test(lower)) return Format.MP4;\n  if (/\\.(mp3|wav|ogg)/.test(lower)) return Format.AUDIO;\n\n  return undefined;\n}","import qs from \"./qs\";\n\nconst colors = {\n  LOG: '#353535',\n  DFP: '#2A852B',\n  METRICS: '#E67C17',\n  ERROR: '#850000',\n  TIME: '#356AFF',\n  TIMEOUT: '#7f2fd8',\n  HLS: '#a4c0Ff',\n  DASH: '#4286f4',\n  TEST: '#e100ff',\n  WARNING: '#ff8c00'\n};\n\nconst tag = '[Ultra Media Element]';\n\nexport const log = (message: string, type: keyof typeof colors = 'LOG') => {\n  console.log(\n    `%c${tag}${type !== 'LOG' ? `[${type}]` : ''} ${message}`,\n    `background: ${colors[type]}; color: #fff; font-size: 12px`\n  );\n};\nexport const debug = (message: string, type: keyof typeof colors = 'LOG') => {\n  if (!qs.get('debug')) return;\n  log(message, type);\n};\n\nexport const showAppInfo = () => {\n  const __APP_NAME__ = null;\n  const __APP_VERSION__ = null;\n  if (!__APP_NAME__) return;\n  log(`${__APP_NAME__} ${__APP_VERSION__}`);\n};\n","export type Constructor<T = Record<string, unknown>> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any[]): T;\n  prototype: T;\n};\n\n/**\n * No-operation (noop).\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-function\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const noop = (..._: unknown[]): void => {\n  // ...\n};\n\n/**\n * Checks if `value` is `null`.\n *\n * @param value - The value to check.\n */\nexport const isNull = (value: unknown): value is null => value === null;\n\n/**\n * Checks if `value` is `undefined`.\n *\n * @param value - The value to check.\n */\nexport const isUndefined = (value: unknown): value is undefined => typeof value === 'undefined';\n\n/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @param value - The value to check.\n */\nexport const isNil = (value: unknown): value is null | undefined =>\n  isNull(value) || isUndefined(value);\n\n/**\n * Returns the constructor of the given `value`.\n *\n * @param value - The value to return the constructor of.\n */\nexport const getConstructor = <T = unknown>(value: unknown): T | undefined =>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  !isNil(value) ? (value as any).constructor : undefined;\n\n/**\n * Checks if `value` is classified as a `Object` object.\n *\n * @param value - The value to check.\n */\nexport const isObject = (value: unknown): boolean => getConstructor(value) === Object;\n\n/**\n * Checks if `value` is classified as a `Number` object.\n *\n * @param value - The value to check.\n */\nexport const isNumber = (value: unknown): value is number =>\n  getConstructor(value) === Number && !Number.isNaN(value);\n\n/**\n * Checks if `value` is classified as a `String` object.\n *\n * @param value - The value to check.\n */\nexport const isString = (value: unknown): value is string => getConstructor(value) === String;\n\n/**\n * Checks if `value` is classified as a `Boolean` object.\n *\n * @param value - The value to check.\n */\nexport const isBoolean = (value: unknown): value is boolean => getConstructor(value) === Boolean;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @param value - The value to check.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isFunction = (value: unknown): value is Function => getConstructor(value) === Function;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @param value - The value to check.\n */\nexport const isArray = (value: unknown): value is unknown[] => Array.isArray(value);\n\n/**\n * Checks if `value` is an instanceof the given `constructor`.\n *\n * @param value - The value to check.\n * @param constructor - The constructor to check against.\n */\nexport const isInstanceOf = (value: unknown, constructor: Constructor<unknown>): boolean =>\n  Boolean(value && constructor && value instanceof constructor);\n\n/**\n * Checks if the `value` prototype chain includes the given `object`.\n *\n * @param value - The value whose prototype chain to check.\n * @param object - The object to search for in the prototype chain.\n */\nexport const isPrototypeOf = (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  value: Object,\n  object: Constructor<unknown>\n): boolean => Boolean(value && object && Object.isPrototypeOf.call(object.prototype, value));\n\nexport const toPerc = (value: number, total: number) => Math.floor(100 * (value / total));\n\nexport const sortNumbers = (min: number, max: number) =>\n  Math.floor(Math.random() * (max - min + 1) + min);\n\nexport const generateUUID = () => {\n  let uuid = '';\n  const hexValues = '0123456789abcdef';\n\n  for (let i = 0; i < 36; i++) {\n    const randomIndex = Math.floor(Math.random() * 16);\n    const currentHexValue = hexValues[randomIndex];\n\n    if (i === 8 || i === 13 || i === 18 || i === 23) {\n      uuid += '-';\n    } else if (i === 14) {\n      uuid += '4';\n    } else if (i === 19) {\n      uuid += hexValues[(randomIndex & 0x3) | 0x8];\n    } else {\n      uuid += currentHexValue;\n    }\n  }\n\n  return uuid;\n};\n\nexport const minMax = (value: number, min: number, max: number) =>\n  Math.max(min, Math.min(value, max));\n\nexport function isEmpty(obj) {\n  for (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}","import { isUndefined, noop } from './unit';\n\n/**\n * Loads an SDK into the global window namespace.\n *\n * @see https://github.com/vime-js/vime/blob/master/packages/core/src/utils/network.ts\n */\nexport const loadSDK = <SDKType = unknown>(\n  url: string,\n  sdkGlobalVar: string,\n  sdkReadyVar?: string,\n  isLoaded: (sdk: SDKType) => boolean = () => true,\n  loadScriptFn = loadScript,\n): Promise<SDKType> => {\n  const getGlobal = (key: keyof Window) => {\n    if (!isUndefined(window[key])) return window[key];\n    if (window['exports'] && window['exports'][key]) return window['exports'][key];\n    if (window['module'] && window['module'].exports && window['module'].exports[key]) {\n      return window['module'].exports[key];\n    }\n    return undefined;\n  };\n\n  const existingGlobal = getGlobal(sdkGlobalVar as keyof Window);\n\n  if (existingGlobal && isLoaded(existingGlobal)) {\n    return Promise.resolve(existingGlobal);\n  }\n\n  return new Promise<SDKType>((resolve, reject) => {\n    if (!isUndefined(pendingSDKRequests[url])) {\n      pendingSDKRequests[url].push({ resolve, reject });\n      return;\n    }\n\n    pendingSDKRequests[url] = [{ resolve, reject }];\n\n    const onLoaded = (sdk: SDKType) => {\n      pendingSDKRequests[url].forEach((request) => request.resolve(sdk));\n    };\n\n    const onError = (e: Error) => {\n      pendingSDKRequests[url].forEach((request) => {\n        request.reject(e);\n      });\n      delete pendingSDKRequests[url];\n      throw e;\n    };\n\n    if (!isUndefined(sdkReadyVar)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const previousOnReady: () => void = window[sdkReadyVar as any] as any;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any)[sdkReadyVar as any] = function () {\n        if (!isUndefined(previousOnReady)) previousOnReady();\n        onLoaded(getGlobal(sdkGlobalVar as keyof Window));\n      };\n    }\n\n    /**\n     * ! PROBLEM\n     * * Ao carregar o player a partir de um MFE comecei a tomar o erro 'Cannot read properties of undefined' no HlsJs.\n     * * Descobri que ao carregar o HlsJs dinamicamente de dentro do MFE, mesmo com o .js adicionado a página corretamente\n     * * o modulo se perdia e eu não conseguia mais acesso via window.Hls.\n     * * Após pesquisa, entendi que ao fazer qualquer carregamento dinamico de .js partir de um MFE o contexto do módulo\n     * * não é mais o window e sim o contexto do próprio MFE.\n     * * Isso acontece porque o SingleSPA usa o System.js por baixo dos panos para carregar e descarregar os módulos,\n     * * o System.js, por sua vez, cria um contexto para cada MFE e por isso, tudo que é carregado dinamicamente\n     * * dentro do MFE fica dentro dele mesmo e não no window.\n     *\n     * * SOLUTION\n     * * O SingleSPA carrega o System.js e ele fica pendurado no window, a idéia é carregar o .js utilizando esse mesmo System.js.\n     * * Para isso, checo se o System.js existe e uso o método System.import para o carregamento do .js necessário\n     */\n    const System = window['System'];\n    if (System && System.hasOwnProperty('import')) {\n      System.import(url)\n        .then((response) => onLoaded(response.default))\n        .catch(onError);\n    } else {\n      loadScriptFn(\n        url,\n        () => {\n          if (isUndefined(sdkReadyVar)) onLoaded(getGlobal(sdkGlobalVar as keyof Window));\n        },\n        onError\n      );\n    }\n  });\n};\n\nexport const loadScript = (\n  src: string,\n  onLoad: () => void,\n  onError: (e: Error) => void = noop\n): void => {\n  const script = document.createElement('script');\n  script.src = src;\n  script.onload = onLoad;\n  script.onerror = onError as any;\n  const firstScriptTag = document.getElementsByTagName('script')[0];\n  firstScriptTag.parentNode?.insertBefore(script, firstScriptTag);\n};\n\nexport function loadDependency(url, globalVariable = '', force = false) {\n  return new Promise((resolve, reject) => {\n    if (window[globalVariable] === undefined || force) {\n      loadScript(url, () => {\n        resolve(window[globalVariable]);\n      }, reject)\n    } else {\n      resolve(window[globalVariable]);\n    }\n  });\n}\n\n\n\ntype PendingSDKRequest<SDKType = any> = {\n  resolve: (value: SDKType) => void;\n  reject: (reason: unknown) => void;\n};\n\nconst pendingSDKRequests: Record<string, PendingSDKRequest[]> = {};\n","import type { IMediaPlayer } from \"../core/media-player\";\nimport { log } from \"../utils/log\";\nimport { loadSDK } from \"../utils/network\";\nimport { isUndefined } from \"../utils/unit\";\n\nexport class HlsPlayer implements IMediaPlayer {\n  private nativeEl: HTMLVideoElement;\n  public onReady: Promise<void>;\n  private Hls: any;\n  private hls: any;\n  private sdkSrc: string = 'https://cdn.jsdelivr.net/npm/hls.js@latest/dist/hls.min.js';\n  private config = {}\n\n  constructor(private element: HTMLVideoElement) {\n    log(\"Powered by Hls.js\");\n    this.nativeEl = element;\n    this.onReady = new Promise((resolve, reject) => {\n      this.setup().then(resolve).catch(reject);\n    });\n  }\n\n  private async setup() {\n    if (isUndefined(this.Hls)) {\n      this.Hls = await loadSDK(this.sdkSrc, 'Hls')\n    }\n    this.hls = new this.Hls(this.config);\n    this.hls.attachMedia(this.nativeEl);\n  }\n\n  destroy() {\n    if (this.hls) {\n      this.hls.destroy();\n      this.hls = null;\n    }\n  }\n\n  load(src: string){\n    if (!this.Hls) return;\n    if (this.Hls?.isSupported()) {\n      this.hls.loadSource(src);\n    } else if (this.nativeEl.canPlayType(\"application/vnd.apple.mpegurl\")) {\n      this.nativeEl.src = src;\n    } else {\n      console.error(\"HLS não suportado no navegador.\");\n    }\n  }\n}\n","import type { IMediaPlayer } from \"../core/media-player\";\n\nexport class VideoPlayer implements IMediaPlayer {\n  public onReady: Promise<void>;\n\n  constructor(private element: HTMLVideoElement) {\n    this.onReady = Promise.resolve();\n  }\n\n  load(src: string): void {\n    this.element.src = src;\n  }\n\n  destroy(): void {\n    this.element.src = '';\n  }\n}\n","import type { IMediaPlayer } from \"../core/media-player\";\nimport { log } from \"../utils/log\";\nimport { loadSDK } from \"../utils/network\";\nimport { isUndefined } from \"../utils/unit\";\n\nexport class DashPlayer implements IMediaPlayer {\n  private nativeEl: HTMLVideoElement;\n  public onReady: Promise<void>;\n  private dashjs: any;\n  private player: any;\n  private sdkSrc: string = 'https://cdn.jsdelivr.net/npm/dashjs@latest/dist/dash.all.min.js';\n  private config = {\n    streaming: {\n      abr: {\n        autoSwitchBitrate: true\n      }\n    }\n  };\n\n  constructor(private element: HTMLVideoElement) {\n    log(\"Powered by dash.js\");\n    this.nativeEl = element;\n    this.onReady = new Promise((resolve, reject) => {\n      this.setup().then(resolve).catch(reject);\n    });\n  }\n\n  private async setup() {\n    if (isUndefined(this.dashjs)) {\n      this.dashjs = await loadSDK(this.sdkSrc, 'dashjs');\n    }\n    this.player = this.dashjs.MediaPlayer().create();\n    this.player.initialize(this.nativeEl, null, true);\n    this.player.updateSettings(this.config);\n  }\n\n  load(src: string) {\n    if (!this.player) return;\n    this.player.attachSource(src);\n  }\n\n  destroy() {\n    if (this.player) {\n      this.player.destroy();\n      this.player = null;\n    }\n  }\n} ","import type { IMediaPlayer } from \"../core/media-player\";\n\nexport class AudioPlayer implements IMediaPlayer {\n  public onReady: Promise<void>;\n\n  constructor(private element: HTMLVideoElement) {\n    this.onReady = Promise.resolve();\n  }\n\n  load(src: string): void {\n    this.element.src = src;\n  }\n\n  destroy(): void {\n    this.element.src = '';\n  }\n}\n","import type { IMediaPlayer, AvailableFormats } from \"./media-player\";\nimport { detectFormat } from \"./format-detector\";\nimport { Format } from \"./format\";\nimport { HlsPlayer } from \"../players/hls-player\";\nimport { VideoPlayer } from \"../players/video-player\";\nimport { DashPlayer } from \"../players/dash-player\";\nimport { AudioPlayer } from \"../players/audio-player\";\n\nexport type PlayerFactoryProps = {\n  src: string;\n  element: HTMLMediaElement;\n  formats?: AvailableFormats;\n};\n\nconst DEFAULT_FORMATS: AvailableFormats = {\n  [Format.HLS]: \"hls.js\",\n  [Format.MP4]: \"video/mp4\",\n  [Format.DASH]: \"dash.js\",\n  [Format.AUDIO]: \"audio/mp3\"\n};\n\nconst engines = new Map<string, (el: HTMLVideoElement) => IMediaPlayer>([\n  [\"hls.js\", (el) => new HlsPlayer(el)],\n  [\"video/mp4\", (el) => new VideoPlayer(el)],\n  [\"dash.js\", (el) => new DashPlayer(el)],\n  [\"audio/mp3\", (el) => new AudioPlayer(el)]\n]);\n\nexport function getCurrentFormatFromElement(el: HTMLMediaElement): Format | undefined {\n  const type = el.dataset?.type;\n\n  const map: Record<string, Format> = {\n    'hls.js': Format.HLS,\n    'dash.js': Format.DASH,\n    'video/mp4': Format.MP4,\n    'audio/mp3': Format.AUDIO\n  };\n\n  return type ? map[type] : undefined;\n}\n\nexport class PlayerFactory {\n  static create({ src, element, formats }: PlayerFactoryProps): IMediaPlayer {\n    const engineType = this.resolveEngine(src, formats ?? DEFAULT_FORMATS);\n    const engine = engines.get(engineType);\n\n    if (!engine) {\n      throw new Error(`No engine registered for: ${engineType}`);\n    }\n\n    element.dataset.type = engineType;\n    const player = engine(element as HTMLVideoElement);\n\n    player.onReady.then(() => player.load(src));\n    return player;\n  }\n\n  private static resolveEngine(src: string, formats: AvailableFormats): string {\n    const format = detectFormat(src);\n\n    if (!format) {\n      throw new Error(`Unsupported media source: ${src}`);\n    }\n\n    const engine = formats[format];\n\n    if (!engine) {\n      throw new Error(`Format ${format} is not configured in formats`);\n    }\n\n    return engine;\n  }\n}","import { SuperVideoElement } from 'super-media-element';\nimport { getCurrentFormatFromElement, PlayerFactory } from './core/player-factory';\nimport { Format } from './core/format';\nimport { detectFormat } from './core/format-detector';\nimport type { IMediaPlayer } from './core/media-player';\n\n/**\n * Ultra Media Element supporting HLS, DASH, MP4 and MP3.\n *\n * @element ultra-media\n * @attr {string} src - Source URL for the media\n */\nexport class UltraMediaElement extends SuperVideoElement {\n\n  private player: IMediaPlayer | null = null;  \n  static skipAttributes = ['src'];\n  public test: string = 'test';\n  \n  constructor() {\n    super();\n  }\n\n  async connectedCallback() {\n    super.connectedCallback?.();\n\n    if (this.loadComplete && !this.isLoaded) {\n      await this.loadComplete;\n    }\n\n    this.initializePlayer();\n  }\n\n  async attributeChangedCallback(attrName: string, oldValue: string, newValue: string) {\n    super.attributeChangedCallback?.(attrName, oldValue, newValue);\n\n    if (attrName === 'src' && oldValue !== newValue) {\n      if (this.loadComplete && !this.isLoaded) {\n        await this.loadComplete;\n      }\n\n      const currentFormat = this.getCurrentFormat();\n      const newFormat = detectFormat(newValue ?? '');\n\n      if (currentFormat !== newFormat) {\n        this.destroyPlayer();\n      }\n\n      if (this.player && currentFormat === newFormat) {\n        this.player.load(newValue);\n      } else {\n        this.initializePlayer();\n      }\n    }\n  }\n\n  private initializePlayer() {\n    if (!this.nativeEl || !this.src) {\n      console.warn('[MyVideoElement] nativeEl or src not available yet');\n      return;\n    }\n\n    this.player = PlayerFactory.create({\n      src: this.src,\n      element: this.nativeEl,\n    });\n  }\n\n  async changeSource(newSrc: string) {\n    if (!newSrc) {\n      console.warn('[MyVideoElement] Invalid source');\n      return;\n    }\n\n    this.setAttribute('src', newSrc);\n  }\n\n  getCurrentFormat(): Format | undefined {\n    return this.nativeEl ? getCurrentFormatFromElement(this.nativeEl) : undefined;\n  }\n\n  private destroyPlayer() {\n    if (this.player?.destroy) {\n      this.player.destroy();\n    }\n\n    this.player = null;\n  }\n}\n","import { UltraMediaElement } from './ultra-media-element';\n\nconst customElement = 'ultra-media';\n\nif (\n  globalThis.customElements &&\n  !globalThis.customElements.get(customElement)\n) {\n  globalThis.customElements.define(customElement, UltraMediaElement);\n}\n\nexport type { UltraMediaElement };\n"],"names":["Events","template","SuperMediaMixin","superclass","tag","is","nativeElTest","nativeElProps","getNativeElProps","SuperMedia","#isDefined","#define","propsToAttrs","prop","args","#init","fn","config","attr","val","#standinEl","#isInit","#loadComplete","#hasLoaded","#isLoaded","#nativeEl","PublicPromise","promise","#initStandinEl","#initNativeEl","#upgradeProperty","childMap","slotEl","removeNativeChildren","el","clone","type","evt","value","dummyEl","name","nativeEl","attrName","oldValue","newValue","#loadSrc","#forwardAttribute","proto","executor","res","rej","resolve","reject","SuperVideoElement","Format","detectFormat","src","lower","colors","log","message","noop","_","isUndefined","loadSDK","url","sdkGlobalVar","sdkReadyVar","isLoaded","loadScriptFn","loadScript","getGlobal","key","existingGlobal","pendingSDKRequests","onLoaded","sdk","request","onError","e","previousOnReady","System","response","onLoad","script","firstScriptTag","HlsPlayer","element","VideoPlayer","DashPlayer","AudioPlayer","DEFAULT_FORMATS","engines","getCurrentFormatFromElement","map","PlayerFactory","formats","engineType","engine","player","format","UltraMediaElement","currentFormat","newFormat","newSrc","customElement"],"mappings":"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","x_google_ignoreList":[0]}