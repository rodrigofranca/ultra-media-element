{"version":3,"file":"ultra-media-element.es.js","sources":["../../../node_modules/.pnpm/super-media-element@1.4.2/node_modules/super-media-element/super-media-element.js","../src/core/format.ts","../src/core/format-detector.ts","../src/utils/log.ts","../src/utils/unit.ts","../src/utils/network.ts","../src/players/hls-player.ts","../src/players/video-player.ts","../src/players/dash-player.ts","../src/players/audio-player.ts","../src/core/player-factory.ts","../src/ultra-media-element.ts","../src/index.ts"],"sourcesContent":["/**\n * Super Media Element\n * Based on https://github.com/muxinc/custom-video-element - Mux - MIT License\n *\n * The goal is to create an element that works just like the video element\n * but can be extended/sub-classed, because native elements cannot be\n * extended today across browsers. Support for extending async loaded video\n * like API's. e.g. video players.\n */\n\n// The onevent like props are weirdly set on the HTMLElement prototype with other\n// generic events making it impossible to pick these specific to HTMLMediaElement.\nexport const Events = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  'timeupdate',\n  'volumechange',\n  'waiting',\n  'waitingforkey',\n  'resize',\n  'enterpictureinpicture',\n  'leavepictureinpicture',\n  'webkitbeginfullscreen',\n  'webkitendfullscreen',\n  'webkitpresentationmodechanged',\n];\n\nexport const template = globalThis.document?.createElement('template');\n\nif (template) {\n  template.innerHTML = /*html*/`\n    <style>\n      :host {\n        display: inline-block;\n        line-height: 0;\n      }\n\n      video,\n      audio {\n        max-width: 100%;\n        max-height: 100%;\n        min-width: 100%;\n        min-height: 100%;\n      }\n    </style>\n    <slot></slot>\n  `;\n}\n\n/**\n * @see https://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\n */\nexport const SuperMediaMixin = (superclass, { tag, is }) => {\n\n  const nativeElTest = globalThis.document?.createElement(tag, { is });\n  const nativeElProps = nativeElTest ? getNativeElProps(nativeElTest) : [];\n\n  return class SuperMedia extends superclass {\n    static Events = Events;\n    static template = template;\n    static skipAttributes = [];\n    static #isDefined;\n\n    static get observedAttributes() {\n      SuperMedia.#define();\n\n      // Include any attributes from the custom built-in.\n      const natAttrs = nativeElTest?.constructor?.observedAttributes ?? [];\n\n      return [\n        ...natAttrs,\n        'autopictureinpicture',\n        'disablepictureinpicture',\n        'disableremoteplayback',\n        'autoplay',\n        'controls',\n        'controlslist',\n        'crossorigin',\n        'loop',\n        'muted',\n        'playsinline',\n        'poster',\n        'preload',\n        'src',\n      ];\n    }\n\n    static #define() {\n      if (this.#isDefined) return;\n      this.#isDefined = true;\n\n      const propsToAttrs = new Set(this.observedAttributes);\n      // defaultMuted maps to the muted attribute, handled manually below.\n      propsToAttrs.delete('muted');\n\n      // Passthrough native el functions from the custom el to the native el\n      for (let prop of nativeElProps) {\n        if (prop in this.prototype) continue;\n\n        const type = typeof nativeElTest[prop];\n        if (type == 'function') {\n          // Function\n          this.prototype[prop] = function (...args) {\n            this.#init();\n\n            const fn = () => {\n              if (this.call) return this.call(prop, ...args);\n              return this.nativeEl[prop].apply(this.nativeEl, args);\n            };\n\n            if (this.loadComplete && !this.isLoaded) {\n              return this.loadComplete.then(fn);\n            }\n            return fn();\n          };\n        } else {\n          // Some properties like src, preload, defaultMuted are handled manually.\n\n          // Getter\n          let config = {\n            get() {\n              this.#init();\n\n              let attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                const val = this.getAttribute(attr);\n                return val === null ? false : val === '' ? true : val;\n              }\n\n              return this.get?.(prop) ?? this.nativeEl?.[prop] ?? this.#standinEl[prop];\n            },\n          };\n\n          if (prop !== prop.toUpperCase()) {\n            // Setter (not a CONSTANT)\n            config.set = async function (val) {\n              this.#init();\n\n              let attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                if (val === true || val === false || val == null) {\n                  this.toggleAttribute(attr, Boolean(val));\n                } else {\n                  this.setAttribute(attr, val);\n                }\n                return;\n              }\n\n              if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n              if (this.set) {\n                this.set(prop, val);\n                return;\n              }\n\n              this.nativeEl[prop] = val;\n            };\n          }\n\n          Object.defineProperty(this.prototype, prop, config);\n        }\n      }\n    }\n\n    #isInit;\n    #loadComplete;\n    #hasLoaded = false;\n    #isLoaded = false;\n    #nativeEl;\n    #standinEl;\n\n    constructor() {\n      super();\n\n      if (!this.shadowRoot) {\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.append(this.constructor.template.content.cloneNode(true));\n      }\n\n      // If a load method is provided in the child class create a load promise.\n      if (this.load !== SuperMedia.prototype.load) {\n        this.loadComplete = new PublicPromise();\n      }\n\n      // If the custom element is defined before the custom element's HTML is parsed\n      // no attributes will be available in the constructor (construction process).\n      // Wait until initializing in the attributeChangedCallback or\n      // connectedCallback or accessing any properties.\n    }\n\n    get loadComplete() {\n      return this.#loadComplete;\n    }\n\n    set loadComplete(promise) {\n      this.#isLoaded = false;\n      this.#loadComplete = promise;\n      promise?.then(() => {\n        this.#isLoaded = true;\n      });\n    }\n\n    get isLoaded() {\n      return this.#isLoaded;\n    }\n\n    get nativeEl() {\n      return this.#nativeEl\n        ?? this.shadowRoot.querySelector(tag)\n        ?? this.querySelector(tag);\n    }\n\n    set nativeEl(val) {\n      this.#nativeEl = val;\n    }\n\n    get defaultMuted() {\n      return this.hasAttribute('muted');\n    }\n\n    set defaultMuted(val) {\n      this.toggleAttribute('muted', Boolean(val));\n    }\n\n    get src() {\n      return this.getAttribute('src');\n    }\n\n    set src(val) {\n      this.setAttribute('src', `${val}`);\n    }\n\n    get preload() {\n      return this.getAttribute('preload') ?? this.nativeEl?.preload;\n    }\n\n    set preload(val) {\n      this.setAttribute('preload', `${val}`);\n    }\n\n    async #init() {\n      if (this.#isInit) return;\n      this.#isInit = true;\n\n      this.#initStandinEl();\n      this.#initNativeEl();\n\n      for (let prop of nativeElProps)\n        this.#upgradeProperty(prop);\n\n      // Keep some native child elements like track and source in sync.\n      const childMap = new Map();\n      // An unnamed <slot> will be filled with all of the custom element's\n      // top-level child nodes that do not have the slot attribute.\n      const slotEl = this.shadowRoot.querySelector('slot:not([name])');\n      slotEl?.addEventListener('slotchange', () => {\n        const removeNativeChildren = new Map(childMap);\n        slotEl\n          .assignedElements()\n          .filter((el) => ['track', 'source'].includes(el.localName))\n          .forEach(async (el) => {\n            // If the source or track is still in the assigned elements keep it.\n            removeNativeChildren.delete(el);\n            // Re-use clones if possible.\n            let clone = childMap.get(el);\n            if (!clone) {\n              clone = el.cloneNode();\n              childMap.set(el, clone);\n            }\n            if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n            this.nativeEl.append?.(clone);\n          });\n        removeNativeChildren.forEach((el) => el.remove());\n      });\n\n      // The video events are dispatched on the SuperMediaElement instance.\n      // This makes it possible to add event listeners before the element is upgraded.\n      for (let type of this.constructor.Events) {\n        this.shadowRoot.addEventListener?.(type, (evt) => {\n          if (evt.target !== this.nativeEl) return;\n          this.dispatchEvent(new CustomEvent(evt.type, { detail: evt.detail }));\n        }, true);\n      }\n    }\n\n    #upgradeProperty(prop) {\n      // Sets properties that are set before the custom element is upgraded.\n      // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        // Delete the set property from this instance.\n        delete this[prop];\n        // Set the value again via the (prototype) setter on this class.\n        this[prop] = value;\n      }\n    }\n\n    #initStandinEl() {\n      // Neither Chrome or Firefox support setting the muted attribute\n      // after using document.createElement.\n      // Get around this by setting the muted property manually.\n      const dummyEl = document.createElement(tag, { is });\n      dummyEl.muted = this.hasAttribute('muted');\n\n      for (let { name, value } of this.attributes) {\n        dummyEl.setAttribute(name, value);\n      }\n\n      this.#standinEl = {};\n      for (let name of getNativeElProps(dummyEl)) {\n        this.#standinEl[name] = dummyEl[name];\n      }\n\n      // unload dummy video element\n      dummyEl.removeAttribute('src');\n      dummyEl.load();\n    }\n\n    async #initNativeEl() {\n      if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n      // If there is no nativeEl by now, create it our bloody selves.\n      if (!this.nativeEl) {\n        const nativeEl = document.createElement(tag, { is });\n        nativeEl.part = tag;\n        this.shadowRoot.append(nativeEl);\n      }\n\n      // Neither Chrome or Firefox support setting the muted attribute\n      // after using document.createElement.\n      // Get around this by setting the muted property manually.\n      this.nativeEl.muted = this.hasAttribute('muted');\n    }\n\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      // Initialize right after construction when the attributes become available.\n      this.#init();\n\n      // Only call loadSrc when the super class has a load method.\n      if (attrName === 'src' && this.load !== SuperMedia.prototype.load) {\n        this.#loadSrc();\n      }\n\n      this.#forwardAttribute(attrName, oldValue, newValue);\n    }\n\n    async #loadSrc() {\n      // The first time we use the Promise created in the constructor.\n      if (this.#hasLoaded) this.loadComplete = new PublicPromise();\n      this.#hasLoaded = true;\n\n      // Wait 1 tick to allow other attributes to be set.\n      await Promise.resolve();\n      await this.load();\n\n      this.loadComplete?.resolve();\n      await this.loadComplete;\n    }\n\n    async #forwardAttribute(attrName, oldValue, newValue) {\n      if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n      // Ignore a few that don't need to be passed & skipped attributes.\n      // e.g. src: native element is using MSE and has a blob url as src attribute.\n      if (['id', 'class', ...this.constructor.skipAttributes].includes(attrName)) {\n        return;\n      }\n\n      if (newValue === null) {\n        this.nativeEl.removeAttribute?.(attrName);\n      } else {\n        this.nativeEl.setAttribute?.(attrName, newValue);\n      }\n    }\n\n    connectedCallback() {\n      this.#init();\n    }\n  };\n};\n\nfunction getNativeElProps(nativeElTest) {\n  // Map all native element properties to the custom element\n  // so that they're applied to the native element.\n  // Skipping HTMLElement because of things like \"attachShadow\"\n  // causing issues. Most of those props still need to apply to\n  // the custom element.\n  let nativeElProps = [];\n\n  // Walk the prototype chain up to HTMLElement.\n  // This will grab all super class props in between.\n  // i.e. VideoElement and MediaElement\n  for (\n    let proto = Object.getPrototypeOf(nativeElTest);\n    proto && proto !== HTMLElement.prototype;\n    proto = Object.getPrototypeOf(proto)\n  ) {\n    nativeElProps.push(...Object.getOwnPropertyNames(proto));\n  }\n\n  return nativeElProps;\n}\n\n/**\n * A utility to create Promises with convenient public resolve and reject methods.\n * @return {Promise}\n */\nclass PublicPromise extends Promise {\n  constructor(executor = () => {}) {\n    let res, rej;\n    super((resolve, reject) => {\n      executor(resolve, reject);\n      res = resolve;\n      rej = reject;\n    });\n    this.resolve = res;\n    this.reject = rej;\n  }\n}\n\nexport const SuperVideoElement = globalThis.document ? SuperMediaMixin(HTMLElement, { tag: 'video' }) : class {};\n\nexport const SuperAudioElement = globalThis.document ? SuperMediaMixin(HTMLElement, { tag: 'audio' }) : class {};\n","export enum Format {\n  HLS = \"hls\",\n  MP4 = \"mp4\",\n  DASH = \"dash\",\n  AUDIO = \"audio\",\n}","import { Format } from \"./format\";\n\nexport function detectFormat(src: string): Format | undefined {\n  const lower = src.toLowerCase();\n\n  if (lower.includes(\".m3u8\")) return Format.HLS;\n  if (lower.includes(\".mpd\")) return Format.DASH;\n  if (/\\.(mp4|webm|ogg)/.test(lower)) return Format.MP4;\n  if (/\\.(mp3|wav|ogg)/.test(lower)) return Format.AUDIO;\n\n  return undefined;\n}","import qs from \"./qs\";\n\nconst colors = {\n  LOG: '#353535',\n  DFP: '#2A852B',\n  METRICS: '#E67C17',\n  ERROR: '#850000',\n  TIME: '#356AFF',\n  TIMEOUT: '#7f2fd8',\n  HLS: '#a4c0Ff',\n  DASH: '#4286f4',\n  TEST: '#e100ff',\n  WARNING: '#ff8c00'\n};\n\nconst tag = '[Ultra Media Element]';\n\nexport const log = (message: string, type: keyof typeof colors = 'LOG') => {\n  console.log(\n    `%c${tag}${type !== 'LOG' ? `[${type}]` : ''} ${message}`,\n    `background: ${colors[type]}; color: #fff; font-size: 12px`\n  );\n};\nexport const debug = (message: string, type: keyof typeof colors = 'LOG') => {\n  if (!qs.get('debug')) return;\n  log(message, type);\n};\n\nexport const showAppInfo = () => {\n  const __APP_NAME__ = null;\n  const __APP_VERSION__ = null;\n  if (!__APP_NAME__) return;\n  log(`${__APP_NAME__} ${__APP_VERSION__}`);\n};\n","export type Constructor<T = Record<string, unknown>> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any[]): T;\n  prototype: T;\n};\n\n/**\n * No-operation (noop).\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-function\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const noop = (..._: unknown[]): void => {\n  // ...\n};\n\n/**\n * Checks if `value` is `null`.\n *\n * @param value - The value to check.\n */\nexport const isNull = (value: unknown): value is null => value === null;\n\n/**\n * Checks if `value` is `undefined`.\n *\n * @param value - The value to check.\n */\nexport const isUndefined = (value: unknown): value is undefined => typeof value === 'undefined';\n\n/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @param value - The value to check.\n */\nexport const isNil = (value: unknown): value is null | undefined =>\n  isNull(value) || isUndefined(value);\n\n/**\n * Returns the constructor of the given `value`.\n *\n * @param value - The value to return the constructor of.\n */\nexport const getConstructor = <T = unknown>(value: unknown): T | undefined =>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  !isNil(value) ? (value as any).constructor : undefined;\n\n/**\n * Checks if `value` is classified as a `Object` object.\n *\n * @param value - The value to check.\n */\nexport const isObject = (value: unknown): boolean => getConstructor(value) === Object;\n\n/**\n * Checks if `value` is classified as a `Number` object.\n *\n * @param value - The value to check.\n */\nexport const isNumber = (value: unknown): value is number =>\n  getConstructor(value) === Number && !Number.isNaN(value);\n\n/**\n * Checks if `value` is classified as a `String` object.\n *\n * @param value - The value to check.\n */\nexport const isString = (value: unknown): value is string => getConstructor(value) === String;\n\n/**\n * Checks if `value` is classified as a `Boolean` object.\n *\n * @param value - The value to check.\n */\nexport const isBoolean = (value: unknown): value is boolean => getConstructor(value) === Boolean;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @param value - The value to check.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isFunction = (value: unknown): value is Function => getConstructor(value) === Function;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @param value - The value to check.\n */\nexport const isArray = (value: unknown): value is unknown[] => Array.isArray(value);\n\n/**\n * Checks if `value` is an instanceof the given `constructor`.\n *\n * @param value - The value to check.\n * @param constructor - The constructor to check against.\n */\nexport const isInstanceOf = (value: unknown, constructor: Constructor<unknown>): boolean =>\n  Boolean(value && constructor && value instanceof constructor);\n\n/**\n * Checks if the `value` prototype chain includes the given `object`.\n *\n * @param value - The value whose prototype chain to check.\n * @param object - The object to search for in the prototype chain.\n */\nexport const isPrototypeOf = (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  value: Object,\n  object: Constructor<unknown>\n): boolean => Boolean(value && object && Object.isPrototypeOf.call(object.prototype, value));\n\nexport const toPerc = (value: number, total: number) => Math.floor(100 * (value / total));\n\nexport const sortNumbers = (min: number, max: number) =>\n  Math.floor(Math.random() * (max - min + 1) + min);\n\nexport const generateUUID = () => {\n  let uuid = '';\n  const hexValues = '0123456789abcdef';\n\n  for (let i = 0; i < 36; i++) {\n    const randomIndex = Math.floor(Math.random() * 16);\n    const currentHexValue = hexValues[randomIndex];\n\n    if (i === 8 || i === 13 || i === 18 || i === 23) {\n      uuid += '-';\n    } else if (i === 14) {\n      uuid += '4';\n    } else if (i === 19) {\n      uuid += hexValues[(randomIndex & 0x3) | 0x8];\n    } else {\n      uuid += currentHexValue;\n    }\n  }\n\n  return uuid;\n};\n\nexport const minMax = (value: number, min: number, max: number) =>\n  Math.max(min, Math.min(value, max));\n\nexport function isEmpty(obj) {\n  for (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}","import { isUndefined, noop } from './unit';\n\n/**\n * Loads an SDK into the global window namespace.\n *\n * @see https://github.com/vime-js/vime/blob/master/packages/core/src/utils/network.ts\n */\nexport const loadSDK = <SDKType = unknown>(\n  url: string,\n  sdkGlobalVar: string,\n  sdkReadyVar?: string,\n  isLoaded: (sdk: SDKType) => boolean = () => true,\n  loadScriptFn = loadScript,\n): Promise<SDKType> => {\n  const getGlobal = (key: keyof Window) => {\n    if (!isUndefined(window[key])) return window[key];\n    if (window['exports'] && window['exports'][key]) return window['exports'][key];\n    if (window['module'] && window['module'].exports && window['module'].exports[key]) {\n      return window['module'].exports[key];\n    }\n    return undefined;\n  };\n\n  const existingGlobal = getGlobal(sdkGlobalVar as keyof Window);\n\n  if (existingGlobal && isLoaded(existingGlobal)) {\n    return Promise.resolve(existingGlobal);\n  }\n\n  return new Promise<SDKType>((resolve, reject) => {\n    if (!isUndefined(pendingSDKRequests[url])) {\n      pendingSDKRequests[url].push({ resolve, reject });\n      return;\n    }\n\n    pendingSDKRequests[url] = [{ resolve, reject }];\n\n    const onLoaded = (sdk: SDKType) => {\n      pendingSDKRequests[url].forEach((request) => request.resolve(sdk));\n    };\n\n    const onError = (e: Error) => {\n      pendingSDKRequests[url].forEach((request) => {\n        request.reject(e);\n      });\n      delete pendingSDKRequests[url];\n      throw e;\n    };\n\n    if (!isUndefined(sdkReadyVar)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const previousOnReady: () => void = window[sdkReadyVar as any] as any;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any)[sdkReadyVar as any] = function () {\n        if (!isUndefined(previousOnReady)) previousOnReady();\n        onLoaded(getGlobal(sdkGlobalVar as keyof Window));\n      };\n    }\n\n    /**\n     * ! PROBLEM\n     * * Ao carregar o player a partir de um MFE comecei a tomar o erro 'Cannot read properties of undefined' no HlsJs.\n     * * Descobri que ao carregar o HlsJs dinamicamente de dentro do MFE, mesmo com o .js adicionado a página corretamente\n     * * o modulo se perdia e eu não conseguia mais acesso via window.Hls.\n     * * Após pesquisa, entendi que ao fazer qualquer carregamento dinamico de .js partir de um MFE o contexto do módulo\n     * * não é mais o window e sim o contexto do próprio MFE.\n     * * Isso acontece porque o SingleSPA usa o System.js por baixo dos panos para carregar e descarregar os módulos,\n     * * o System.js, por sua vez, cria um contexto para cada MFE e por isso, tudo que é carregado dinamicamente\n     * * dentro do MFE fica dentro dele mesmo e não no window.\n     *\n     * * SOLUTION\n     * * O SingleSPA carrega o System.js e ele fica pendurado no window, a idéia é carregar o .js utilizando esse mesmo System.js.\n     * * Para isso, checo se o System.js existe e uso o método System.import para o carregamento do .js necessário\n     */\n    const System = window['System'];\n    if (System && System.hasOwnProperty('import')) {\n      System.import(url)\n        .then((response) => onLoaded(response.default))\n        .catch(onError);\n    } else {\n      loadScriptFn(\n        url,\n        () => {\n          if (isUndefined(sdkReadyVar)) onLoaded(getGlobal(sdkGlobalVar as keyof Window));\n        },\n        onError\n      );\n    }\n  });\n};\n\nexport const loadScript = (\n  src: string,\n  onLoad: () => void,\n  onError: (e: Error) => void = noop\n): void => {\n  const script = document.createElement('script');\n  script.src = src;\n  script.onload = onLoad;\n  script.onerror = onError as any;\n  const firstScriptTag = document.getElementsByTagName('script')[0];\n  firstScriptTag.parentNode?.insertBefore(script, firstScriptTag);\n};\n\nexport function loadDependency(url, globalVariable = '', force = false) {\n  return new Promise((resolve, reject) => {\n    if (window[globalVariable] === undefined || force) {\n      loadScript(url, () => {\n        resolve(window[globalVariable]);\n      }, reject)\n    } else {\n      resolve(window[globalVariable]);\n    }\n  });\n}\n\n\n\ntype PendingSDKRequest<SDKType = any> = {\n  resolve: (value: SDKType) => void;\n  reject: (reason: unknown) => void;\n};\n\nconst pendingSDKRequests: Record<string, PendingSDKRequest[]> = {};\n","import type { IMediaPlayer } from \"../core/media-player\";\nimport { log } from \"../utils/log\";\nimport { loadSDK } from \"../utils/network\";\nimport { isUndefined } from \"../utils/unit\";\n\nexport class HlsPlayer implements IMediaPlayer {\n  private nativeEl: HTMLVideoElement;\n  public onReady: Promise<void>;\n  private Hls: any;\n  private hls: any;\n  private sdkSrc: string = 'https://cdn.jsdelivr.net/npm/hls.js@latest/dist/hls.min.js';\n  private config = {}\n\n  constructor(private element: HTMLVideoElement) {\n    log(\"Powered by Hls.js\");\n    this.nativeEl = element;\n    this.onReady = new Promise((resolve, reject) => {\n      this.setup().then(resolve).catch(reject);\n    });\n  }\n\n  private async setup() {\n    if (isUndefined(this.Hls)) {\n      this.Hls = await loadSDK(this.sdkSrc, 'Hls')\n    }\n    this.hls = new this.Hls(this.config);\n    this.hls.attachMedia(this.nativeEl);\n  }\n\n  destroy() {\n    if (this.hls) {\n      this.hls.destroy();\n      this.hls = null;\n    }\n  }\n\n  load(src: string){\n    if (!this.Hls) return;\n    if (this.Hls?.isSupported()) {\n      this.hls.loadSource(src);\n    } else if (this.nativeEl.canPlayType(\"application/vnd.apple.mpegurl\")) {\n      this.nativeEl.src = src;\n    } else {\n      console.error(\"HLS não suportado no navegador.\");\n    }\n  }\n}\n","import type { IMediaPlayer } from \"../core/media-player\";\n\nexport class VideoPlayer implements IMediaPlayer {\n  public onReady: Promise<void>;\n\n  constructor(private element: HTMLVideoElement) {\n    this.onReady = Promise.resolve();\n  }\n\n  load(src: string): void {\n    this.element.src = src;\n  }\n\n  destroy(): void {\n    this.element.src = '';\n  }\n}\n","import type { IMediaPlayer } from \"../core/media-player\";\nimport { log } from \"../utils/log\";\nimport { loadSDK } from \"../utils/network\";\nimport { isUndefined } from \"../utils/unit\";\n\nexport class DashPlayer implements IMediaPlayer {\n  private nativeEl: HTMLVideoElement;\n  public onReady: Promise<void>;\n  private dashjs: any;\n  private player: any;\n  private sdkSrc: string = 'https://cdn.jsdelivr.net/npm/dashjs@latest/dist/dash.all.min.js';\n  private config = {\n    streaming: {\n      abr: {\n        autoSwitchBitrate: true\n      }\n    }\n  };\n\n  constructor(private element: HTMLVideoElement) {\n    log(\"Powered by dash.js\");\n    this.nativeEl = element;\n    this.onReady = new Promise((resolve, reject) => {\n      this.setup().then(resolve).catch(reject);\n    });\n  }\n\n  private async setup() {\n    if (isUndefined(this.dashjs)) {\n      this.dashjs = await loadSDK(this.sdkSrc, 'dashjs');\n    }\n    this.player = this.dashjs.MediaPlayer().create();\n    this.player.initialize(this.nativeEl, null, true);\n    this.player.updateSettings(this.config);\n  }\n\n  load(src: string) {\n    if (!this.player) return;\n    this.player.attachSource(src);\n  }\n\n  destroy() {\n    if (this.player) {\n      this.player.destroy();\n      this.player = null;\n    }\n  }\n} ","import type { IMediaPlayer } from \"../core/media-player\";\n\nexport class AudioPlayer implements IMediaPlayer {\n  public onReady: Promise<void>;\n\n  constructor(private element: HTMLVideoElement) {\n    this.onReady = Promise.resolve();\n  }\n\n  load(src: string): void {\n    this.element.src = src;\n  }\n\n  destroy(): void {\n    this.element.src = '';\n  }\n}\n","import type { IMediaPlayer, AvailableFormats } from \"./media-player\";\nimport { detectFormat } from \"./format-detector\";\nimport { Format } from \"./format\";\nimport { HlsPlayer } from \"../players/hls-player\";\nimport { VideoPlayer } from \"../players/video-player\";\nimport { DashPlayer } from \"../players/dash-player\";\nimport { AudioPlayer } from \"../players/audio-player\";\n\nexport type PlayerFactoryProps = {\n  src: string;\n  element: HTMLMediaElement;\n  formats?: AvailableFormats;\n};\n\nconst DEFAULT_FORMATS: AvailableFormats = {\n  [Format.HLS]: \"hls.js\",\n  [Format.MP4]: \"video/mp4\",\n  [Format.DASH]: \"dash.js\",\n  [Format.AUDIO]: \"audio/mp3\"\n};\n\nconst engines = new Map<string, (el: HTMLVideoElement) => IMediaPlayer>([\n  [\"hls.js\", (el) => new HlsPlayer(el)],\n  [\"video/mp4\", (el) => new VideoPlayer(el)],\n  [\"dash.js\", (el) => new DashPlayer(el)],\n  [\"audio/mp3\", (el) => new AudioPlayer(el)]\n]);\n\nexport function getCurrentFormatFromElement(el: HTMLMediaElement): Format | undefined {\n  const type = el.dataset?.type;\n\n  const map: Record<string, Format> = {\n    'hls.js': Format.HLS,\n    'dash.js': Format.DASH,\n    'video/mp4': Format.MP4,\n    'audio/mp3': Format.AUDIO\n  };\n\n  return type ? map[type] : undefined;\n}\n\nexport class PlayerFactory {\n  static create({ src, element, formats }: PlayerFactoryProps): IMediaPlayer {\n    const engineType = this.resolveEngine(src, formats ?? DEFAULT_FORMATS);\n    const engine = engines.get(engineType);\n\n    if (!engine) {\n      throw new Error(`No engine registered for: ${engineType}`);\n    }\n\n    element.dataset.type = engineType;\n    const player = engine(element as HTMLVideoElement);\n\n    player.onReady.then(() => player.load(src));\n    return player;\n  }\n\n  private static resolveEngine(src: string, formats: AvailableFormats): string {\n    const format = detectFormat(src);\n\n    if (!format) {\n      throw new Error(`Unsupported media source: ${src}`);\n    }\n\n    const engine = formats[format];\n\n    if (!engine) {\n      throw new Error(`Format ${format} is not configured in formats`);\n    }\n\n    return engine;\n  }\n}","import { SuperVideoElement } from 'super-media-element';\nimport { getCurrentFormatFromElement, PlayerFactory } from './core/player-factory';\nimport { Format } from './core/format';\nimport { detectFormat } from './core/format-detector';\nimport type { IMediaPlayer } from './core/media-player';\n\n/**\n * Ultra Media Element supporting HLS, DASH, MP4 and MP3.\n *\n * @element ultra-media\n * @attr {string} src - Source URL for the media\n */\nexport class UltraMediaElement extends SuperVideoElement {\n\n  private player: IMediaPlayer | null = null;  \n  static skipAttributes = ['src'];\n  public test: string = 'test';\n  \n  constructor() {\n    super();\n  }\n\n  async connectedCallback() {\n    super.connectedCallback?.();\n\n    if (this.loadComplete && !this.isLoaded) {\n      await this.loadComplete;\n    }\n\n    this.initializePlayer();\n  }\n\n  async attributeChangedCallback(attrName: string, oldValue: string, newValue: string) {\n    super.attributeChangedCallback?.(attrName, oldValue, newValue);\n\n    if (attrName === 'src' && oldValue !== newValue) {\n      if (this.loadComplete && !this.isLoaded) {\n        await this.loadComplete;\n      }\n\n      const currentFormat = this.getCurrentFormat();\n      const newFormat = detectFormat(newValue ?? '');\n\n      if (currentFormat !== newFormat) {\n        this.destroyPlayer();\n      }\n\n      if (this.player && currentFormat === newFormat) {\n        this.player.load(newValue);\n      } else {\n        this.initializePlayer();\n      }\n    }\n  }\n\n  private initializePlayer() {\n    if (!this.nativeEl || !this.src) {\n      console.warn('[MyVideoElement] nativeEl or src not available yet');\n      return;\n    }\n\n    this.player = PlayerFactory.create({\n      src: this.src,\n      element: this.nativeEl,\n    });\n  }\n\n  async changeSource(newSrc: string) {\n    if (!newSrc) {\n      console.warn('[MyVideoElement] Invalid source');\n      return;\n    }\n\n    this.setAttribute('src', newSrc);\n  }\n\n  getCurrentFormat(): Format | undefined {\n    return this.nativeEl ? getCurrentFormatFromElement(this.nativeEl) : undefined;\n  }\n\n  private destroyPlayer() {\n    if (this.player?.destroy) {\n      this.player.destroy();\n    }\n\n    this.player = null;\n  }\n}\n","import { UltraMediaElement } from './ultra-media-element';\n\nconst customElement = 'ultra-media';\n\nif (\n  globalThis.customElements &&\n  !globalThis.customElements.get(customElement)\n) {\n  globalThis.customElements.define(customElement, UltraMediaElement);\n}\n\nexport type { UltraMediaElement };\n"],"names":["Events","template","SuperMediaMixin","superclass","tag","is","nativeElTest","nativeElProps","getNativeElProps","SuperMedia","#isDefined","#define","propsToAttrs","prop","args","#init","fn","config","attr","val","#standinEl","#isInit","#loadComplete","#hasLoaded","#isLoaded","#nativeEl","PublicPromise","promise","#initStandinEl","#initNativeEl","#upgradeProperty","childMap","slotEl","removeNativeChildren","el","clone","type","evt","value","dummyEl","name","nativeEl","attrName","oldValue","newValue","#loadSrc","#forwardAttribute","proto","executor","res","rej","resolve","reject","SuperVideoElement","Format","detectFormat","src","lower","colors","log","message","noop","_","isUndefined","loadSDK","url","sdkGlobalVar","sdkReadyVar","isLoaded","loadScriptFn","loadScript","getGlobal","key","existingGlobal","pendingSDKRequests","onLoaded","sdk","request","onError","e","previousOnReady","System","response","onLoad","script","firstScriptTag","HlsPlayer","element","VideoPlayer","DashPlayer","AudioPlayer","DEFAULT_FORMATS","engines","getCurrentFormatFromElement","map","PlayerFactory","formats","engineType","engine","player","format","UltraMediaElement","currentFormat","newFormat","newSrc","customElement"],"mappings":"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","x_google_ignoreList":[0]}